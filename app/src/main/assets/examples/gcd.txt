# Copyright (C) Philip J. Guo (philip@pgbovine.net)
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Tutorial code from Prof. Peter Wentworth
# Rhodes University, South Africa (http://www.ru.ac.za/)

def gcd(x, y, depth=1):
    '''
    Find the greatest common divisor of x, y
    Pre:  x >= y,  y >= 0, both x and y are int
    '''
    result = x       # set provisional return value
    if y != 0:
        indent = "**" * depth
        print(("%s About to recursively call gcd(%d, %d)" % (indent, y, x%y)))
        result = gcd(y, x % y, depth+1)
        print(("%s result is %d" % (indent, result)))
    return result

def main():
    m = 77
    n = 28
    print(("Finding gcd(%d, %d)" % (m,n)))
    g = gcd(m, n)
    print(('Greatest common divisor of %d, %d = %d'
          % (m, n, g)))

main()